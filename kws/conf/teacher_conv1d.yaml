module:
  _target_: src.module.KWS
model:
  _target_: src.model.Conv1dNet
  in_features: 64
  n_classes: ${len:${train_dataloader.dataset.idx_to_keyword}}
  kernels:
    - 3
    - 3
    - 3
    - 3
    - 3
    - 3
  strides:
    - 2
    - 1
    - 1
    - 1
    - 1
    - 1
  channels:
    - 64
    - 64
    - 64
    - 64
    - 64
    - 64
  hidden_size: 16
  activation:
    _target_: torch.nn.ReLU

loss:
  _target_: torch.nn.CrossEntropyLoss

train_dataloader:
  _target_: torch.utils.data.DataLoader
  num_workers: 4
  batch_size: 128
  prefetch_factor: 1
  collate_fn: ${function:src.data.collator}
  shuffle: True
  dataset:
    _target_: src.data.SpotterDataset
    manifest_path: ???
    idx_to_keyword:
    - 'sber'
    - 'joy'
    - 'afina'
    - 'salut'
    - 'filler'
    transforms:
      - _target_: torchaudio.transforms.MelSpectrogram
        sample_rate: 16000
        n_fft: 400
        win_length: 400
        hop_length: 160
        n_mels: ${model.in_features}
      - _target_: src.data.SpecScaler

val_dataloader:
  _target_: torch.utils.data.DataLoader
  num_workers: ${train_dataloader.num_workers}
  batch_size: ${train_dataloader.batch_size}
  prefetch_factor: ${train_dataloader.prefetch_factor}
  collate_fn: ${train_dataloader.collate_fn}
  shuffle: False
  dataset:
    _target_: src.data.SpotterDataset
    manifest_path: ???
    idx_to_keyword: ${train_dataloader.dataset.idx_to_keyword}
    transforms:
      - ${getindex:${train_dataloader.dataset.transforms}, 0}
      - ${getindex:${train_dataloader.dataset.transforms}, -1}

predict_dataloader:
  _target_: torch.utils.data.DataLoader
  num_workers: 1
  batch_size: ${val_dataloader.batch_size}
  prefetch_factor: ${val_dataloader.prefetch_factor}
  collate_fn: ${val_dataloader.collate_fn}
  shuffle: False
  dataset:
    _target_: ${val_dataloader.dataset._target_}
    manifest_path: ???
    idx_to_keyword: ${val_dataloader.dataset.idx_to_keyword}
    transforms: ${val_dataloader.dataset.transforms}
    test: True

trainer:
  _target_: pytorch_lightning.Trainer
  val_check_interval: 0.5
  check_val_every_n_epoch: 1
  log_every_n_steps: 5
  precision: 32
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0
  accelerator: auto
  max_steps: 8000
  devices: 1

logger:
  _target_: pytorch_lightning.loggers.TensorBoardLogger
  save_dir: .
  
optim:
  _target_: torch.optim.Adam
  lr: 1e-3
